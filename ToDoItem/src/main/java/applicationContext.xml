<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:axon="http://www.axonframework.org/schema/core"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.axonframework.org/schema/core 
	http://www.axonframework.org/schema/axon-core.xsd">

	<axon:command-bus id="commandBus" />
	<axon:event-bus id="eventBus" />

	<axon:event-sourcing-repository id="toDoRepository"
		aggregate-type="fr.uvsq.dataScale.commandhandler.ToDoItem" />

	<axon:aggregate-command-handler id="toDoItemHandler"
		aggregate-type="fr.uvsq.dataScale.commandhandler.ToDoItem" repository="toDoRepository"
		command-bus="commandBus" />

	<axon:filesystem-event-store id="eventStore"
		base-dir="event" />

	<bean
		class="org.axonframework.commandhandling.gateway.CommandGatewayFactoryBean">
		<property name="commandBus" ref="commandBus" />
	</bean>
	<!-- The first tag is needed only once, regardless of the number of Event 
		Handler beans you register. It tells Axon to automatically check all beans 
		in the Application Context for @EventHandler and @CommandHandler annotations. 
		This works very nicely in combination with Springâ€™s component scanning capability. 
		The second tags simply creates an instance of the handler. Axon will detect 
		the annotations and do the necessary. -->
	<!-- <axon:annotation-config /> -->
	<!-- <bean class="fr.uvsq.dataScale.eventhandling.ToDoEventHandler" /> -->

</beans>